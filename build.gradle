plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.openapi.generator' version '6.4.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'vitaliiev'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

// add openapi src dir
sourceSets.main.java.srcDirs += "$buildDir/generated/src/main/java".toString()

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.0.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    implementation 'com.github.sidssids:block-logger:1.2.1'

}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/static/api.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "vitaliiev.forecast2023.api"
    modelPackage = "vitaliiev.forecast2023.dto"
    apiFilesConstrainedTo = [""]
    modelFilesConstrainedTo = [""]
    supportingFilesConstrainedTo = ["ApiUtil.java"]
    configOptions = [delegatePattern: "true",
                     title          : "forecast2023",
                     useJakartaEe   : "true"]
    validateSpec = true
    typeMappings = [
            OffsetDateTime: 'java.time.LocalDateTime'
    ]
}

compileJava.dependsOn("openApiGenerate")

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    def profile = "dev";
    if (project.hasProperty("prod")) {
        profile = "prod"
    }
    args = ["--spring.profiles.active=${profile}"]
}

jib {
    from {
        image = "eclipse-temurin:17-jre-focal"
        platforms {
            platform {
                architecture = "${findProperty('jibArchitecture') ?: 'amd64'}"
                os = "linux"
            }
        }
    }
    to {
        image = "forecast2023:latest"
    }
    container {
        ports = ["8080"]
        jvmFlags = ['-Dspring.profiles.active=prod', '-Dforecast2023.owm-api-key=' + owmApikey]
        mainClass = 'vitaliiev.forecast2023.Forecast2023Application'
    }
}